From 0b138a2eb420b296d853cc6222e60b6d0e23376e Mon Sep 17 00:00:00 2001
From: OpenEmbedded <oe.patch@oe>
Date: Thu, 15 Apr 2021 17:35:28 +0000
Subject: [PATCH] Revert "drm/xen-front: flush buffer during set config and
 page flip"

This reverts commit e79edcc184dd776bf0ba76fccc6e2c3436325544.

:q!lpwd
---
 drivers/gpu/drm/xen/xen_drm_front.c | 33 ---------------------------------
 1 file changed, 33 deletions(-)

diff --git a/drivers/gpu/drm/xen/xen_drm_front.c b/drivers/gpu/drm/xen/xen_drm_front.c
index 76170cb..09894a1 100644
--- a/drivers/gpu/drm/xen/xen_drm_front.c
+++ b/drivers/gpu/drm/xen/xen_drm_front.c
@@ -10,7 +10,6 @@
 
 #include <linux/delay.h>
 #include <linux/dma-mapping.h>
-#include <linux/dma-noncoherent.h>
 #include <linux/module.h>
 #include <linux/of_device.h>
 
@@ -87,34 +86,6 @@ static void dbuf_free_all(struct list_head *dbuf_list)
 	}
 }
 
-static struct xen_drm_front_dbuf *dbuf_get_by_fb(struct list_head *dbuf_list,
-						 u64 fb_cookie)
-{
-	struct xen_drm_front_dbuf *buf, *q;
-
-	list_for_each_entry_safe(buf, q, dbuf_list, list)
-		if (buf->fb_cookie == fb_cookie)
-			return buf;
-
-	return NULL;
-}
-
-static void flush_fb(struct list_head *dbuf_list, u64 fb_cookie)
-{
-	struct xen_drm_front_dbuf *buf;
-	int i;
-
-	if (!fb_cookie)
-		return;
-
-	buf = dbuf_get_by_fb(dbuf_list, fb_cookie);
-	if (!buf)
-		return;
-
-	for (i = 0; i < buf->shbuf.num_pages; i++)
-		arch_dma_prep_coherent(buf->shbuf.pages[i], PAGE_SIZE);
-}
-
 static struct xendispl_req *
 be_prepare_req(struct xen_drm_front_evtchnl *evtchnl, u8 operation)
 {
@@ -165,8 +136,6 @@ int xen_drm_front_mode_set(struct xen_drm_front_drm_pipeline *pipeline,
 
 	mutex_lock(&evtchnl->u.req.req_io_lock);
 
-	flush_fb(&front_info->dbuf_list, fb_cookie);
-
 	spin_lock_irqsave(&front_info->io_lock, flags);
 	req = be_prepare_req(evtchnl, XENDISPL_OP_SET_CONFIG);
 	req->op.set_config.x = x;
@@ -384,8 +353,6 @@ int xen_drm_front_page_flip(struct xen_drm_front_info *front_info,
 
 	mutex_lock(&evtchnl->u.req.req_io_lock);
 
-	flush_fb(&front_info->dbuf_list, fb_cookie);
-
 	spin_lock_irqsave(&front_info->io_lock, flags);
 	req = be_prepare_req(evtchnl, XENDISPL_OP_PG_FLIP);
 	req->op.pg_flip.fb_cookie = fb_cookie;
-- 
2.7.4

